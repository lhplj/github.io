<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>lhplj</title>
    <link href="https://lhplj.github.io/feed.xml" rel="self" />
    <link href="https://lhplj.github.io" />
    <updated>2024-05-15T14:59:17+08:00</updated>
    <author>
        <name>lhplj</name>
    </author>
    <id>https://lhplj.github.io</id>

    <entry>
        <title>求整数二进制位最右(低)1的位置</title>
        <author>
            <name>lhplj</name>
        </author>
        <link href="https://lhplj.github.io/qiu-zheng-shu-er-jin-zhi-wei-zui-youdi1de-wei-zhi.html"/>
        <id>https://lhplj.github.io/qiu-zheng-shu-er-jin-zhi-wei-zui-youdi1de-wei-zhi.html</id>

        <updated>2024-05-15T14:59:17+08:00</updated>
            <summary>
                <![CDATA[
                    # 对于任意整数N,求N的二进制位最右1的位置 int pos = N &amp; ((~N) + 1); 对原数先取反再加1,最后再与原数进行与操作即可 使用场景 # 假设数组 arr 中的这两种数为 a 和 b int eor = 0; for (int i = 0; i &lt; arr.length; i++) { eor ^= arr[i]; } # 此时 eor = a ^ b #&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <pre class="language-java"><code># 对于任意整数N,求N的二进制位最右1的位置
int pos = N &amp; ((~N) + 1);</code></pre>
<p>对原数先取反再加1,最后再与原数进行与操作即可</p>
<p>使用场景</p>
<ol>
<li>一个数组中有两种数是奇数个,找出这两种数
<pre class="language-java"><code># 假设数组 arr 中的这两种数为 a 和 b
int eor = 0;
for (int i = 0; i &lt; arr.length; i++) {
    eor ^= arr[i];
}
# 此时 eor = a ^ b
# 因为 a != b 则 eor != 0 则必有二进制位有1
int rigthOne = eor &amp; ((~eor) + 1);
# 则对于 a 和 b 必有一个rigthOne 位置为1一个为 0
# 则必有 rightOne ^ a 和 rightOne ^ b 一个为1一个为0(可通过此方法将a与b分开)
int a = 0;
for (int i = 0; i &lt; arr.length; i++) {
    if (arr[i] &amp; rightOne != 0) {
        a ^= arr[i];
    }
}
int b = eor ^ a;</code></pre>
</li>
</ol>
            ]]>
        </content>
    </entry>
    <entry>
        <title>异或^</title>
        <author>
            <name>lhplj</name>
        </author>
        <link href="https://lhplj.github.io/yi-huo.html"/>
        <id>https://lhplj.github.io/yi-huo.html</id>

        <updated>2024-05-15T14:06:14+08:00</updated>
            <summary>
                <![CDATA[
                    异或运算符^运算规则:相同为0,不同为1 0 ^ 0 = 0; 1 ^ 1 = 0; 0 ^ 1 = 1; 1 ^ 0 = 1; 则对于任意整数N满足 N ^ N = 0; 0 ^ N = N; 进一步,对于任意整数M和N满足 M ^ N ^ N = M; N ^ M ^ N&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>异或运算符^运算规则:相同为0,不同为1</p>
<pre class="language-java"><code>0 ^ 0 = 0;
1 ^ 1 = 0;
0 ^ 1 = 1;
1 ^ 0 = 1;</code></pre>
<p>则对于任意整数N满足</p>
<pre class="language-java"><code>N ^ N = 0;
0 ^ N = N;</code></pre>
<p>进一步,对于任意整数M和N满足</p>
<pre class="language-java"><code>M ^ N ^ N = M;
N ^ M ^ N = M;</code></pre>
<p><strong>使用场景</strong></p>
<ol>
<li>数值交换
<pre class="language-java"><code># 交换 a 与 b 的值
int a = 7;
int b = 9;
# 正常数值交换,需要使用一个临时变量
int temp = a;
a = b;
b = temp;

# 通过异或
# a = 7 ^ 9;
a = a ^ b;
# b = 7 ^ 9 ^ 9 则 b = 7
b = a ^ b;
# a = 7 ^ 9 ^ 7 则 a = 9 完成交换
a = a ^ b;

# 注意事项: 通过异或交换数值时,要保证2个数指向的不是同一个地址</code></pre>
</li>
<li>一个数组中只有一种数有奇数个,找到这个数
<pre class="language-java"><code># 对于数组 arr 中只有一种数有奇数个,其它为偶数个
int eor = 0;
for (int i = 0; i &lt; arr.length; i++) {
    eor ^= arr[i];
}
# 最后 eor 就是要求的值</code></pre>
</li>
</ol>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>晶晶</title>
        <author>
            <name>lhplj</name>
        </author>
        <link href="https://lhplj.github.io/test.html"/>
        <id>https://lhplj.github.io/test.html</id>

        <updated>2024-05-14T18:19:10+08:00</updated>
            <summary>
                <![CDATA[
                    晶晶 爱你哟!
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>晶晶
爱你哟!</p>
            ]]>
        </content>
    </entry>
</feed>
